
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-operator
  namespace: {{ .Release.Namespace | quote }}
  labels:
  {{- include "chart.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-operator
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/part-of: keptn-lifecycle-toolkit
    control-plane: metrics-operator
    keptn.sh/inject-cert: "true"
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.metricsOperator.replicas }}
  selector:
    matchLabels:
      control-plane: metrics-operator
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: metrics-operator
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - webhook-server
        - --leader-elect
        - --adapter-port=6443
        - --adapter-certs-dir=/tmp/metrics-adapter/serving-certs
        - --v=10
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: EXPOSE_KEPTN_METRICS
          value: {{ .Values.metricsOperator.env.exposeKeptnMetrics | quote }}
        - name: ENABLE_ANALYSIS
          value: {{ .Values.metricsOperator.env.enableKeptnAnalysis | quote }}
        - name: METRICS_CONTROLLER_LOG_LEVEL
          value: {{ .Values.metricsOperator.env.metricsControllerLogLevel | quote
            }}
        - name: ANALYSIS_CONTROLLER_LOG_LEVEL
          value: {{ .Values.metricsOperator.env.analysisControllerLogLevel | quote
            }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.metricsOperator.image.repository }}:{{ .Values.metricsOperator.image.tag
          | default .Chart.AppVersion }}
        name: metrics-operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9999
          name: metrics
          protocol: TCP
        - containerPort: 6443
          name: custom-metrics
          protocol: TCP
        resources: {{- toYaml .Values.metricsOperator.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.metricsOperator.containerSecurityContext.allowPrivilegeEscalation
            }}
          capabilities: {{- include "tplvalues.render" (dict "value" .Values.metricsOperator.containerSecurityContext.capabilities
            "context" $) | nindent 12 }}
          privileged: {{ .Values.metricsOperator.containerSecurityContext.privileged
            }}
          runAsGroup: {{ .Values.metricsOperator.containerSecurityContext.runAsGroup
            }}
          runAsNonRoot: {{ .Values.metricsOperator.containerSecurityContext.runAsNonRoot
            }}
          runAsUser: {{ .Values.metricsOperator.containerSecurityContext.runAsUser
            }}
          seccompProfile: {{- include "tplvalues.render" (dict "value" .Values.metricsOperator.containerSecurityContext.seccompProfile
            "context" $) | nindent 12 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs/
          name: certs-dir
        - mountPath: /tmp/metrics-adapter/serving-certs
          name: adapter-certs-dir
        {{- if .Values.metricsOperator.livenessProbe }}
        livenessProbe: {{- include "tplvalues.render" (dict "value" .Values.metricsOperator.livenessProbe "context" $) | nindent 10 }}
         {{- else }}
        livenessProbe:
         httpGet:
           path: /healthz
           port: 8081
         initialDelaySeconds: 15
         periodSeconds: 20
        {{- end }}
        {{- if .Values.metricsOperator.readinessProbe }}
        readinessProbe: {{- include "tplvalues.render" (dict "value" .Values.metricsOperator.readinessProbe "context" $) | nindent 10 }}
         {{- else }}
        readinessProbe:
         httpGet:
           path: /readyz
           port: 8081
         initialDelaySeconds: 5
         periodSeconds: 10
        {{- end }}
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: metrics-operator
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: certs-dir
      - emptyDir: {}
        name: adapter-certs-dir
{{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector: {{- include "tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations: {{- include "tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
{{- end }}


